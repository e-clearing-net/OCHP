<?xml version="1.0"?>
<s:schema elementFormDefault="qualified" targetNamespace="http://ochp.eu/1.4" xmlns:tns="http://ochp.eu/1.4" xmlns:s="http://www.w3.org/2001/XMLSchema">

	<s:include schemaLocation="data-types.xsd"/>

	<s:complexType name="EvseStatusType">
		<s:sequence>
			<s:element name="evseId" type="tns:EvseId" minOccurs="1" maxOccurs="1"></s:element>
		</s:sequence>
		<s:attribute name="major" use="required">
			<s:annotation>
				<s:documentation>
					The major status type reflects the overall status of the EVSE. Values:
						available: the EVSE is able to start a new charging process;
						not-available: at the moment no new charging process may be started;
						unknown: the current status of the EVSE is not known;
				</s:documentation>
			</s:annotation>
			<s:simpleType>
				<s:restriction base="s:string">
					<s:enumeration value="available"></s:enumeration>
					<s:enumeration value="not-available"></s:enumeration>
					<s:enumeration value="unknown"></s:enumeration>
				</s:restriction>
			</s:simpleType>
		</s:attribute>
		<s:attribute name="minor" use="optional">
			<s:annotation>
				<s:documentation>
					The optional minor status type reflects the detailed status of the EVSE in addition to the major status. For each minor status value a proposed ttl value is given. However, the ttl should only be set to a value other than default if the expected status change is known or can be predicted. Values:
						available: the EVSE is able to start a new charging process;
						reserved: the EVSE is able to start a new charging process for limited duration as a future reservation is present. ttl to be set on the start of the reservation;
						charging: the EVSE is in use. ttl to be set on the expected end of the charging process;
						blocked: the EVSE not accessible because of a physical barrier, i.e. a car;
						outoforder: the EVSE is currently out of order. ttl to be set to the expected re-enabling;
				</s:documentation>
			</s:annotation>
			<s:simpleType>
				<s:restriction base="s:string">
					<s:enumeration value="available"></s:enumeration>
					<s:enumeration value="reserved"></s:enumeration>
					<s:enumeration value="charging"></s:enumeration>
					<s:enumeration value="blocked"></s:enumeration>
					<s:enumeration value="outoforder"></s:enumeration>
				</s:restriction>
			</s:simpleType>
		</s:attribute>
		<s:attribute name="ttl" type="s:dateTime" use="optional">
			<s:annotation>
				<s:documentation>
					The time to live is set as the deadline until which the status value is to be considered valid.  Should be set to the expected status change.
				</s:documentation>
			</s:annotation>
		</s:attribute>
	</s:complexType>
	<s:complexType name="ParkingStatusType">
		<s:sequence>
			<s:element name="parkingId" type="tns:ParkingId" minOccurs="1" maxOccurs="1"></s:element>
		</s:sequence>
		<s:attribute name="status" use="required">
			<s:annotation>
				<s:documentation>
					The status type reflects the overall status of the parking spot. Values:
						available: the parking spot is empty;
						not-available: the parking spot is occupied;
						unknown: the current status of the parking spot is not known;
				</s:documentation>
			</s:annotation>
			<s:simpleType>
				<s:restriction base="s:string">
					<s:enumeration value="available"></s:enumeration>
					<s:enumeration value="not-available"></s:enumeration>
					<s:enumeration value="unknown"></s:enumeration>
				</s:restriction>
			</s:simpleType>
		</s:attribute>
		<s:attribute name="ttl" type="s:dateTime" use="optional">
			<s:annotation>
				<s:documentation>
					The time to live is set as the deadline until which the status value is to be considered valid.  Should be set to the expected status change.
				</s:documentation>
			</s:annotation>
		</s:attribute>
	</s:complexType>

</s:schema>
