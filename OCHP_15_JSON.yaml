openapi: 3.0.0
info:
  version: '0.0.2'
  title: 'OCHP 1.5 JSON'
  description: 'OCHP 1.5 JSON API Prototype'
  contact:
    name: e-clearing.net
    url: https://ochp.eu
    email: info@e-clearing.net
  license:
    name: MIT License
    url: https://github.com/e-clearing-net/OCHP/blob/master/LICENSE

tags:
  - name: 'EMSP: Roaming Authorisation Data Exchange API'
    description: Exchange of Roaming (EV-Charging) Informations between EMSP & eCHS
    
  - name: 'CPO: Roaming Authorisation Data Exchange API'
    description: Exchange of Roaming (EV-Charging) Informations between CPO & eCHS
    
  - name: 'CPO: Charge Detail Record Exchange API'
    description: Exchange of Charge Data Informations between CPO and eCHS.
  
  - name: 'EMSP: Charge Detail Record Exchange API'
    description: Exchange of Charge Data Informations between EMSP and eCHS.
    
  - name: 'CPO: Live Status Interface Exchange API'
    description: Exchange of current Live Status of individual charging stations between CPO and eCHS.
    
  - name: 'PSO: Live Status Interface Exchange API'
    description: Exchange of current Live Status of individual parking spots between PSO and eCHS.
    
  - name: 'NSP: Live Status Information Exchange API'
    description: Exchange of current Live Status of individual charging stations and parking spot between eCHS and NSP.
    
  - name: 'CPO: Tariff Information Exchange API'
    description: Exchange of Tariff Information between the CPO & eCHS.
    
  - name: 'EMSP: Tariff Information Exchange API'
    description: Exchange of Tariff Information between eCHS & EMSP.
    
  - name: 'CPO: Charge Point Information Exchange API'
    description: Exchange of Charge Point Information between CPO & eCHS
    
  - name: 'NSP: Charge Point Information Exchange API'
    description: Exchange of Charge Point Information between eCHS & NSP
    
#security: 
 # - ApiKeyAuth: []
    
paths:
  /RoamingAuthorisationInfos:
      get:
        tags:
          - 'CPO: Roaming Authorisation Data Exchange API'
        # The Charge point Management System downloads the global authorisation data repository from the CHS.
        description: Allows a CPO to download the Roaming Authorisation List from eCHS
        parameters:
            - name: pagination
              in: query
              description: Filter the results updated, starting from the mentioned date and time.
              schema: 
              # to filter the authorisation data as per desired criteria.
                $ref: '#/components/schemas/Pagination'
                
            - name: CPO-ID
              in: query
              description: The ID of the CPO/CPOs requesting the data/Roaming Authorisation Information from the eCHS server. To retrieve the RoamingAuthorisations for selected CPOs.
              schema: 
              # to get authorisation Tokens for/from selected partner(s) i.e. the user can include the The ID of the CPO/CPOs requesting the data/Roaming Authorisation Information from the eCHS server or the ID of the EMSP/EMSPs whose data/Roaming Authorisation Information is requested by the CPO/CPOs from the eCHS server. CPOs and for which specific sister companies i.e. EMSPs (if exist).
                $ref: '#/components/schemas/PartnerID'
                
            - name: EMP-ID
              in: query
              description: The ID of the EMSP/EMSPs whose data/Roaming Authorisation Information is requested by the CPO/CPOs from the eCHS server. To retrieve the RoamingAuthorisations from selected EMSPs.
              schema: 
              # to get authorisation Tokens for/from selected partner(s) i.e. the user can include the The ID of the CPO/CPOs requesting the data/Roaming Authorisation Information from the eCHS server or the ID of the EMSP/EMSPs whose data/Roaming Authorisation Information is requested by the CPO/CPOs from the eCHS server. CPOs and for which specific sister companies i.e. EMSPs (if exist).
                $ref: '#/components/schemas/PartnerID'
            

        responses:
        
        # for each value in the Result class an error code has been created. For eg: 200 is for Result value - 'ok' , 401 for a Result value 'not-authorised' etc, 400 for a Result value 'inavlid-id' and 'format', 500 for a Result value 'server' , 403 for a Result value 'roaming'
        
          '200':
            description: The response from CHS. Successful download of the Roaming Authorisation Lists (GetRoamingAuthorisationList.conf).
            # This response is sent when the CHS was able to completely fulfill the get roaming authorisation request from the CPO. If the CHS manages to send all the requested roaming authorisation list, then along with the list the result value 'ok' is sent.
            content:
              application/json:
                schema:
                   # the resultCodeType 'ok' is to be send.
                       $ref: '#/components/schemas/ResponseModel'
                       
          '401':
            #  The response send by the CHS when the CPO is  Not-authorised to request for the data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
           
              $ref: '#/components/responses/Not-authorised'
                    
                        
          '400':
            # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
          
             $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent.
          
              $ref: '#/components/responses/InternalServerError'
                        
          '403':
            # The response send by the CHS when the requesting CPO is one which has no roaming connections set or have no own partners connected to the user.
          
              $ref: '#/components/responses/Forbidden'

      put: # The PUT method can be used to add new set of Roaming Authorisation data and also to update another set of Roaming Authorisation data to the existing Roaming Authorisation List (i.e update the whole roaming authorisation list) in the CHS by an EMSP. i.e If an EMSP wants to add 50 more tokens to the 100 tokens that are already on the eCHS server, it can use the PUT method and send the 100 tokens again along with the 50 new tokens. By doing so the 150 tokens it sends would replace the 100 tokens that were previously in eCHS.
        tags: 
          - 'EMSP: Roaming Authorisation Data Exchange API' 
        description: Allows the EMSP to set Roaming Authorisation List or make updates on the Roaming Authorisation List to the CHS. PUT can also be used to update the tokens, but the request must contain all the tokens that the EMP wants to be in the eCHS system, as this request will replace all the old data in eCHS.
          
        requestBody:
            required: true
            content: 
              application/json:
                  schema:
                    items:
                             $ref: '#/components/schemas/RequestModel'
                        
        responses:
        
        # for each value in the Result class an error code has been created. For eg: 201 is for Result value - 'ok', 206 for Result value 'partly', 401 for a Result value 'not-authorised' etc, 400 for a Result value 'inavlid-id' and 'format',500 for a Result value 'server' , 403 for a Result value 'roaming'
        
          '201':
            # This response is sent by the CHS when the EMSP could successfully make a set Roaming Authorisation List function or an update of the entire Roaming authorisation data/lists.With a successful  operation by EMSP, the CHS sents the Result value 'ok'
              description: The response from CHS. Successfully set/added roaming authorisation list by the EMSP into the CHS (SetRoamingAuthorisationList.conf).
              content:
                application/json:
                  schema:
                    type: object
                    required:
                      - result
                    properties:
                      result:
                        # the resultCodeType 'ok' is to be send.
                        $ref: 'schemas/result.yaml#/Result'
            
          '206':
            # This response is sent by the CHS when the EMSP  sets/updates the  Roaming authorisation data/lists in the CHS, however not all were  successfully set/updated due to some reason. The CHS sends the Result value 'partly' and also sends the roaming authorisation lists that could not be updated in the CHS.
              description: Partially-successful addition/setting of roaming authorisation list by the EMSP into the CHS (SetRoamingAuthorisationList.conf).
              content:
                application/json:
                  schema:
                    #type: array
                    #items:
                       # the resultCodeType 'partly' is to be send.
                           $ref: '#/components/schemas/PartialSuccessResponseModel'
                  
          '401':
            # The response send by the CHS when the EMSP is Not-authorised to update data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
          
                         $ref: '#/components/responses/Not-authorised'
                         
          '400':
           # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
            
            
                         $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent
              
                         $ref: '#/components/responses/InternalServerError'
                         
          '403':
            # The response send by the CHS when the EMSP requesting the update on roaming list  is one which has no roaming connections set or have no own partners connected to the user. Result value 'roaming'
                
                        $ref: '#/components/responses/Forbidden'   
          
      patch: # The PATCH operation carries out a partial-update function on the roaming authorisation list that exists in the CHS. It is used when one or more fields need a change/update in the roaming list but not all fields have to be changed. For eg: when we need to invalidate a token, we only have to set the expiryDate as a date in the past and pass it along with the other info of the token through the patch method. 
        tags: 
           - 'EMSP: Roaming Authorisation Data Exchange API'
        description: Allows the EMSP to make (partial) updates only on certain fields (that requires to be changed) of the Roaming Authorisation List in the CHS. 
        
        requestBody:
            required: true
            content: 
              application/json:
                  schema:
                    items:
                             $ref: '#/components/schemas/RequestModel'   
                    
        responses:
          '201':
            # This response is sent by the CHS when the EMSP could successfully carry out the partial update of the Roaming authorisation data/lists. With the successful (partial) update operation by EMSP, the CHS sents the Result value 'ok'
              description: The response from CHS. Successful update of roaming authorisation list by the EMSP into the CHS (UpdateRoamingAuthorisationList.conf).
              content:
                application/json:
                  schema:
                    type: object
                    required:
                      - result
                    properties:
                      result:
                       # the resultCodeType 'ok' is to be send.
                        $ref: 'schemas/result.yaml#/Result'
            
          '206':
            # This response is sent by the CHS when the EMSP carries out partial updates on the  Roaming authorisation data/lists in the CHS, however not all were  successful due to some reason. The CHS sends the Result value 'partly' and also sends the roaming authorisation lists that could not be updated in the CHS.
              description: Partially-successful (partial) update of roaming authorisation list by the EMSP into the CHS (UpdateRoamingAuthorisationList.conf).
              content:
                application/json:
                  schema:
                   # type: array
                    # items:
                       # the resultCodeType 'partly' is to be send.
                    $ref: '#/components/schemas/PartialSuccessResponseModel'
             
          
          '401':
            # The response send by the CHS when the EMSP is Not-authorised to update data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
          
                         $ref: '#/components/responses/Not-authorised'
                         
          '400':
            # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
            
                         $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent
              
                         $ref: '#/components/responses/InternalServerError'
                         
          '403':
            # The response send by the CHS when the EMSP requesting the partial update on roaming list is one which has no roaming connections set or have no own partners connected to the user. Result value 'roaming'
                
                        $ref: '#/components/responses/Forbidden'  
  
  /RoamingAuthorisationInfos/{instance}/{evseId}/authorise:
      post:
        tags:
          - 'CPO: Roaming Authorisation Data Exchange API'
          # Single authorization requests are sent from the EVSE-Operator backend to the clearing house in the event that the local repository of authorization records was not synchronized from the clearing house.In case of some tokens, the EMSP might want a real time authorisation of the token or carry out a single authorisation in real time rather than whitelist-ing it. 
        description: Allows a single roaming authorisation of selected tokens. The Charge point management system may request the Clearing House to authorize one single token for a charging session. The Charge point management system sends the request to authorise selected tokens by the EMSP via the CHS.
        parameters:
          - name: instance
            in: path
            description: This contains the ID of the token which is to be validated.
            required: true
            schema:
                type: string
                minLength: 1
                maxLength: 36
                description: Specification according to the token type
                example: 3FA43D5B2
          
          - name: evseId
            in: path
            description: This contains the ID of the EVSE where the charging has to take place. Unique identifier for every EVSE following a common scheme with a major id-unit reflecting the country and the market partner issuing it.
            required: true
            schema:
                required: 
                    - EvseId
                properties:
                    EvseId:
                        $ref: 'schemas/generic.yaml#/EvseId'
              
        requestBody:
          required: true
          content: 
            application/json:
                schema:
                  required: 
                    - emtId
                  properties:
                    emtId:
                      $ref: 'schemas/generic.yaml#/EvseId'
        responses:
          # for each value in the Result class an error code has been created. For eg: 201 is for Result value - 'ok', 401 for a Result value 'not-authorised' etc, 400 for a Result value 'inavlid-id' and 'format', 500 for a Result value 'server' , 403 for a Result value 'roaming'
        
          '200':
            description: The response from CHS. Successfully sends the roaming authorisation record for the requested token. (RequestSingleRoamingAuthorisationList.conf). This contains the roaming authorisation record for the requested token, if the request was valid.
            # This response is sent when the CHS was able to completely fulfill the request to obtain the  roaming authorisation data of the requested token by the CPO.  If the CHS manages to send the requested roaming authorisation data of the token mentioned, then along with the data the result value 'ok' is sent.
            content:
              application/json:
                schema:
                      # the resultCodeType 'ok' is to be send.  
                       $ref: '#/components/schemas/SingleRoamingResponseModel'
                       
          '404': 
            description: The response from EMSP via CHS. When the EMSP does not know the token for which the CPO is requesting an authorisation, CHS responds with a 404- Not found.
                       
          '401':
            #  The response send by the CHS when the CPO is  Not-authorised to request for the data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
           
              $ref: '#/components/responses/Not-authorised'
                    
                        
          '400':
            # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
          
             $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent.
          
              $ref: '#/components/responses/InternalServerError'
                        
          '403':
            # The response send by the CHS when the requesting CPO is one which has no roaming connections set or have no own partners connected to the user.
          
              $ref: '#/components/responses/Forbidden'

                      
  /CDRs:
    get: 
      tags:
          - 'EMSP: Charge Detail Record Exchange API'
      # Incoming roaming charge data records, held at the CHS are sent from the CHS to the EMSP. Note that only CDRs that concern the particular EMSP are sent.
      description: Allows an EMSP to request for the Charge Detail Records from the CHS. The EMSP gets the CDRs from the CPOs endpoint through the CHS. (GetCDRs.req)
      parameters:
            - name: pagination
              in: query
              description: Filter the results updated, starting from the mentioned date and time.
              schema: 
              # to filter the CDRs as per mentioned criteria.
                $ref: '#/components/schemas/Pagination'
                
            - name: CPO-ID
              in: query
              description: The ID of the CPO/CPOs from where the Charge detail record is requested by an EMSP/EMSPs. To retrieve the CDRs from selected CPOs.
              schema: 
              # to get CDRs for/from selected partner(s) i.e. the user can include the The ID of the EMSP/EMSPs requesting the CDRs from the eCHS server or the ID of the CPO/CPOs whose CDR is requested by the EMSP/EMSPs from the eCHS server. CPOs and for which specific sister companies i.e. EMSPs (if exist).
                $ref: '#/components/schemas/PartnerID'
                
            - name: EMP-ID
              in: query
              description: The ID of the EMSP/EMSPs requesting the charge detail record from the respective CPO/CPOs with which it has a roaming connection. To retrieve the CDRs for selected EMPs 
              schema: 
              # to get CDRs for/from selected partner(s) i.e. the user can include the The ID of the EMSP/EMSPs requesting the CDRs from the eCHS server or the ID of the CPO/CPOs whose CDR is requested by the EMSP/EMSPs from the eCHS server. CPOs and for which specific sister companies i.e. EMSPs (if exist).
                $ref: '#/components/schemas/PartnerID'
              
            - name: cdrStatus
              in: query
              description: Defines which status of CDRs to return. Valid options are:- accepted, declined, revised, rejected, approved. If not set, will return accepted and revised CDRs.
              # If the EMSP does not specify the status of CDRs it needs, then the CHS would send the CDRs of statuses accepted and revised
              schema:
                  # default: accepted and revised
                  # optional field (cdrStatus), but when provided should contain at most one value. If value not provided by client then the default values 'accepted and revised CDRs'are used.
                $ref: 'schemas/cdr.yaml#/CdrStatusType'
      
          
      responses:
          '200':
            description: The response from CHS. Successful download of the CDR from the CHS (GetCDRs.conf)
            # This response is sent when the CHS was able to completely fulfill the get Charge detail records request from the EMSP. If the CHS manages to send all the requested Charge detail records, then along with the CDR info array the result value 'ok' is sent.
            content:
              application/json:
                schema:
                  allOf:
                    - $ref: "schemas/result.yaml#/PaginatedResult"
                    - type: object
                      properties:
                        data:
                          $ref: "schemas/cdr.yaml#/CDRInfo"
            
          '401':
            #  The response send by the CHS when the EMSP is  Not-authorised to request for the data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
           
              $ref: '#/components/responses/Not-authorised'
                    
                        
          '400':
            # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
          
             $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent.
          
              $ref: '#/components/responses/InternalServerError'
                        
          '403':
            # The response send by the CHS when the requesting EMSP is one which has no roaming connections set or have no own partners connected to the user.
          
              $ref: '#/components/responses/Forbidden'
   
    post:
        tags: 
            - 'CPO: Charge Detail Record Exchange API'
        # Upload Charge Data Records. Local roaming charge data records are sent from the CMS to the CHS.    
        description: Allows a CPO to add the CDRs into CHS. May be used by a CPO to mark declined CDRs as finally rejected, by uploading them again under that status. (AddCDRs.req)
        
        requestBody:
            required: true
            content: 
              application/json:
                  schema:
                   # items:
                      # When CDRs are posted for the first time in CHS, the cdrStatusType should be 'new'. When the CPO re-uploads the CDR after it was accepted/declined in the previous upload, the status 'revised' should be used. CPO should also be able to add the declined CDRs finally with status 'rejected'.
                          $ref: '#/components/schemas/AddCdrRequestModel'
                          
        responses:
          '201':
          # This response is sent by the CHS when all the CDRs added by the CPO were successfully uploaded in the CHS. When the CPO successfully uploads the CDR, the CHS sents the Result value 'ok'.
             description: The response from CHS. Successful upload of Charge Detail Records into the CHS by the CPO. (AddCDRs.conf).
             content:
                application/json:
                  schema:
                    type: object
                    required:
                      - result
                    properties:
                      result:
                        # the resultCodeType 'ok' is to be send.
                        $ref: 'schemas/result.yaml#/Result'
          
          '206':
            # This response is sent by the CHS when the CPO uploads the charge detail records  in the CHS, however not all were  successfully uploaded instead refused by the CHS. The CHS sends the Result value 'partly' and also sends the charge detail records that it considers implausible and refuses. 
              description: Partially-successful upload of charge detail records by the CPO into the CHS (AddCDRs.conf).
              content:
                application/json:
                  schema:
                       # the resultCodeType 'partly' is to be send.
                           $ref: '#/components/schemas/ImplausibleCDRsResponseModel'   
                           
          '401':
            #  The response send by the CHS when the CPO is  Not-authorised to request for the data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
           
              $ref: '#/components/responses/Not-authorised'
                    
                        
          '400':
            # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
          
             $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent.
          
              $ref: '#/components/responses/InternalServerError'
                        
          '403':
            # The response send by the CHS when the requesting CPO is one which has no roaming connections set or have no own partners connected to the user.
          
              $ref: '#/components/responses/Forbidden'
  
    patch:
        tags:
            - 'EMSP: Charge Detail Record Exchange API'
        description: The EMSP send the CHS the list of CDRs that it approves or declines.
        requestBody:
          content: 
              application/json:
                  schema:

                      $ref: '#/components/schemas/ConfirmCDRs'
        
        responses:
          '201':
            description: The response from CHS. This response is send to the confirmation of CDRs request from EMSP. (ConfirmCDRs.conf).
            content:
                application/json:
                  schema:
                    type: object
                    required:
                      - result
                    properties:
                      result:
                        # the resultCodeType 'ok' is to be send.
                        $ref: 'schemas/result.yaml#/Result'
          '206':
            # This response is sent by the CHS when the EMSP tries to send the list of Approved and/declined CDRs, however not all were  successful due to some reason. The CHS sends the Result value 'partly' and also sends the cdr Ids, whose status could not be uploaded in the CHS.
              description: Partially-successful (partial) update of cdr status by the EMSP into the CHS (ConfirmCDRs.conf).
              content:
                application/json:
                  schema:
                    type: array
                    items:
                       # the resultCodeType 'partly' is to be send.
                           $ref: '#/components/schemas/refusedIDs'
         
          '401':
            # The response send by the CHS when the EMSP is Not-authorised to update data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
          
                         $ref: '#/components/responses/Not-authorised'
                         
          '400':
           # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
            
            
                         $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent
              
                         $ref: '#/components/responses/InternalServerError'
                         
          '403':
            # The response send by the CHS when the EMSP requesting the update on roaming list  is one which has no roaming connections set or have no own partners connected to the user. Result value 'roaming'
                
                        $ref: '#/components/responses/Forbidden' 
        
  /CDRs/CheckCDRs:  
    get:
      tags: 
          - 'CPO: Charge Detail Record Exchange API'
      #  the Charge Management System may download declined CDRs and attempt to fix any issues that might exist  by re-uploading the CDRs as "revised" or to finally reject them (forego payment) by setting their status to "rejected".
      description: Allows a CPO to check the CDR for EMSPs/EMSP (with which it has roaming connection) in the CHS. (CheckCDRs.req)
      parameters:
            - name: pagination
              in: query
              description: Filter the results updated, starting from the mentioned date and time.
              schema: 
              # to filter the CDRs as per mentioned criteria.
                $ref: '#/components/schemas/Pagination'
                
            - name: EMP-ID
              in: query
              description: The ID of the EMSP/EMSPs, whose Charge Detail Records are to be checked by the requesting  CPO/CPOs in the CHS. To retrieve the CDRs from selected EMPs.
              schema: 
              # to get CDRs for/from selected partner(s) i.e. the user can include the The ID of the CPO/CPOs requesting the CDRs from the eCHS server or the ID of the EMSP/EMSPs whose CDR is requested by the CPO/CPOs from the eCHS server. EMP/EMSP and for which specific sister companies i.e. CPOs (if exist).
                $ref: '#/components/schemas/PartnerID'
                
            - name: CPO-ID
              in: query
              description: The ID of the CPO/CPOs requesting to check the Charge Detail Record of EMSP/EMSPs in the CHS. To retrieve the CDRs for selected CPOs (own sister companies).
              schema: 
              # to get CDRs for/from selected partner(s) i.e. the user can include the The ID of the CPO/CPOs requesting the CDRs from the eCHS server or the ID of the EMSP/EMSPs whose CDR is requested by the CPO/CPOs from the eCHS server. EMP/EMSP and for which specific sister companies i.e. CPOs (if exist).
                $ref: '#/components/schemas/PartnerID'
            
            - name: cdrStatus
              in: query
              description: Defines which status of CDRs to return. Valid options are- accepted, declined, revised, rejected, approved. If not set, will return declined CDRs.
              schema:
                  # default: declined
                  # cannot have 'revised' as an enum
                  # optional field (cdrStatus), but when provided should contain at most one value. If value not provided by client then the default value 'declined CDRs'are used.
                  $ref: 'schemas/cdr.yaml#/CdrStatusType'


      responses:
          '200':
            description: The response from CHS. Successful download of the CDR from the CHS (CheckCDRs.conf)
            # This response is sent when the CHS was able to completely fulfill the get Charge detail records request from the CPO. If the CHS manages to send all the requested Charge detail records, then along with the CDR info array the result value 'ok' is sent.
            content:
              application/json:
                schema:
                  allOf:
                    - $ref: "schemas/result.yaml#/PaginatedResult"
                    - type: object
                      properties:
                        data:
                          $ref: "schemas/cdr.yaml#/CDRInfo"
        
          '401':
            #  The response send by the CHS when the CPO is  Not-authorised to request for the data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
           
              $ref: '#/components/responses/Not-authorised'
                    
                        
          '400':
            # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
          
             $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent.
          
              $ref: '#/components/responses/InternalServerError'
                        
          '403':
            # The response send by the CHS when the requesting CPO is one which has no roaming connections set or have no own partners connected to the user.
          
              $ref: '#/components/responses/Forbidden'

  /Status:
    patch:
      tags:
          - 'CPO: Live Status Interface Exchange API'
          - 'PSO: Live Status Interface Exchange API'
      description: A CPO may update the current live status of individual charging stations in the Clearing House to allow   roaming partners to receive those statuses. Additionally, a PSO may update the current live status of individual parking spots, allowing the EVSE Operators roaming partners to receive these alongside the EVSE live status(UpdateStatus.req).
      
      requestBody:
          content: 
            application/json:
                schema:
                  items:   
                    $ref: '#/components/schemas/UpdateStatus'
      responses:
        '200':
          description: The response from CHS. This response is send when the Status update is done by the CPO/PSO in the eCHs
          content:
                application/json:
                  schema:
                    type: object
                    required:
                      - result
                    properties:
                      result:
                        # the resultCodeType 'ok' is to be send.
                        $ref: 'schemas/result.yaml#/Result'
        '401':
            # The response send by the CHS when the CPO/PSO is Not-authorised to update data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
          
                         $ref: '#/components/responses/Not-authorised'
                         
        '400':
           # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
            
            
                         $ref: '#/components/responses/BadRequest'
              
        '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent
              
                         $ref: '#/components/responses/InternalServerError'
                         
        '403':
            # The response send by the CHS when the CPO/PSO requesting the update on roaming list  is one which has no roaming connections set or have no own partners connected to the user. Result value 'roaming'
                
                        $ref: '#/components/responses/Forbidden' 
        
    get:
      tags:
        - 'NSP: Live Status Information Exchange API'
      # Download global live status information from the CHS. NSP may receive the current live status of individual charging stations and parking spot from the Clearing House. 
      description: Allows an NSP to download the global live status information from the eCHS.
      parameters: 
        - name: startDateTime
          in: query
          description: If this value is set to a point in the past the response is limited to status information that is more actual than the given value.
          schema:
            
                $ref: 'schemas/generic.yaml#/DateTimeType'
        
        - name: statusType
          in: query
          description: This field can be set to determine which status values to return from the CHS. Valid entries:- evse, parking, combined. If not set, only EVSE status values will be returned.
              # If not set, only EVSE status values will be returned.
          schema:
                  
                  $ref: 'schemas/evseStatus.yaml#/StatusType'
                  
      responses:
        '200':
            description: The response from CHS. Successful download of global live status information from the CHS.
            # This response is sent when the CHS was able to completely fulfill the get global live status information request from the NSP. If the CHS manages to send all the global live status information, then along with this information the result value 'ok' is sent.
            content:
              application/json:
                schema:
                  # the resultCodeType 'ok' is to be send.
                      $ref: '#/components/schemas/StatusConfirmation'  
        
        '401':
            #  The response send by the CHS when the NSP is  Not-authorised to request for the data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
           
              $ref: '#/components/responses/Not-authorised'
                    
                        
        '400':
            # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
          
             $ref: '#/components/responses/BadRequest'
              
        '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent.
          
              $ref: '#/components/responses/InternalServerError'
                        
        '403':
            # The response send by the CHS when the requesting NSP is one which has no roaming connections set or have no own partners connected to the user.
          
              $ref: '#/components/responses/Forbidden'
              
  /Tariff:
    # The eCHS enables CPOs to upload tariffs and tariff-groups for each charge point they operate. These tariffs may be defined for individual EMSPs. This is to ensure a quick and automated change in tariffs for certain charge points without having to alter bilateral agreements every time and without having a very large annex.
    put:
      tags: 
        - 'CPO: Tariff Information Exchange API'
      description: The CPO uploads and/updates their tariff information to the Clearing House. 
      requestBody:
          required: true
          content: 
            application/json:
                schema:
                  
                     $ref: '#/components/schemas/TariffRequestModel'
                    
                              
      responses:
        # for each value in the Result class an error code has been created. For eg: 201 is for Result value - 'ok', 206 for Result value 'partly', 401 for a Result value 'not-authorised' etc, 400 for a Result value 'inavlid-id' and 'format',500 for a Result value 'server' , 403 for a Result value 'roaming'
        
          '201':
            # This response is sent by the CHS when the CPO could successfully upload or update their tariff information to the Clearing House. With a successful  operation by CPO, the CHS sents the Result value 'ok'
              description: The response from CHS. Successfully uploaded the tariff information  by the CPO into the CHS (UpdateTariffs.conf).
              content:
                application/json:
                  schema:
                    type: object
                    required:
                      - result
                    properties:
                      result:
                        # the resultCodeType 'ok' is to be send.
                        $ref: 'schemas/result.yaml#/Result'
            
          '206':
            # This response is sent by the CHS when the CPO uploads or updates the tariff information to the Clearing House, however not all were  successfully uploaded/updated due to some reason. The CHS sends the Result value 'partly' and also sends the records that could not be updated/uploaded in the CHS.
              description: Partially-successful upload/update of tariff information by the CPO into the CHS (UpdateTariffs.conf).
              content:
                application/json:
                  schema:
                      # the resultCodeType 'partly' is to be send.
                        $ref: '#/components/schemas/refusedTariffInfoModel'
           
          '401':
            # The response send by the CHS when the CPO is Not-authorised to update data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
          
                         $ref: '#/components/responses/Not-authorised'
                         
          '400':
           # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
            
            
                         $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent
              
                         $ref: '#/components/responses/InternalServerError'
                         
          '403':
            # The response send by the CHS when the CPO requesting the updateor upload of tariff information  is one which has no roaming connections set or have no own partners connected to the user. Result value 'roaming'
                
                        $ref: '#/components/responses/Forbidden'  
    
    get:
      # An EMSP has to regularly download tariff information for their roaming partners' charge points from the Clearing House.
      tags:
          - 'EMSP: Tariff Information Exchange API'
      description: Download the Tariff Information from the CHS.
      parameters: 
            - name: pagination
              in: query
              description: Filter the results updated, starting from the mentioned date and time.
              schema: 
              # to filter the Tariffs as per mentioned criteria.
                $ref: '#/components/schemas/Pagination'
                
            - name: CPO-ID
              in: query
              description: The ID of the CPO/CPOs whose tariff information is requested by the EMSP/EMSPs from the eCHS server. To retrieve the Tariffs from selected CPOs
              schema: 
              # to get CDRs for/from selected partner(s) i.e. the user can include the The ID of the EMSP/EMSPs requesting the tariff information from the eCHS server or the ID of the CPO/CPOs whose tariff data is requested by the EMSP/EMSPs from the eCHS server. CPO/CPOs and for which specific sister companies i.e. EMSPs (if exist).
                $ref: '#/components/schemas/PartnerID'
                
            - name: EMP-ID
              in: query
              description: The ID of the EMSP/EMSPs requesting the Tariff information from the eCHS server. To retrieve the Tariffs for selected EMPs.
              schema: 
              # to get CDRs for/from selected partner(s) i.e. the user can include the The ID of the EMSP/EMSPs requesting the tariff information from the eCHS server or the ID of the CPO/CPOs whose tariff data is requested by the EMSP/EMSPs from the eCHS server. CPO/CPOs and for which specific sister companies i.e. EMSPs (if exist).
                $ref: '#/components/schemas/PartnerID'
                

      responses:
        
        # for each value in the Result class an error code has been created. For eg: 200 is for Result value - 'ok' , 401 for a Result value 'not-authorised' etc, 400 for a Result value 'inavlid-id' and 'format', 500 for a Result value 'server' , 403 for a Result value 'roaming'
        
          '200':
            description: The response from CHS. Successful download of the tariff Information. (GetTariffUpdatest.conf).
            # This response is sent when the CHS was able to completely fulfill the get tariff Information request from the EMSP. If the CHS manages to send all the requested tariff information, then along with the list the result value 'ok' is sent.
            content:
              application/json:
                schema:
                  # the resultCodeType 'ok' is to be send.
                       $ref: '#/components/schemas/TariffResponseModel'
                       
          '401':
            #  The response send by the CHS when the EMSP is  Not-authorised to request for the data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
           
              $ref: '#/components/responses/Not-authorised'
                    
                        
          '400':
            # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
          
             $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent.
          
              $ref: '#/components/responses/InternalServerError'
                        
          '403':
            # The response send by the CHS when the requesting EMSP is one which has no roaming connections set or have no own partners connected to the user.
          
              $ref: '#/components/responses/Forbidden'
        
  /ChargePointList:
    put:
      # For user information and routing purpose detailed information about charge points can be exchanged via OCHP. The CPO sends this data towards the systems of Navigation Service Providers. Those systems may aggregate, sort and filter the data and provide it to the navigation services or devices through proprietary interfaces within the NSP ecosystem. 
      tags: 
          - 'CPO: Charge Point Information Exchange API'
      description: The CPO uploads own charge point information to the CHS. Each CPO has to upload its own Charge point information to the Clearing House. (SetChargePointList.req)
      requestBody:
          required: true
          content: 
            application/json:
                schema:
                  
                     $ref: '#/components/schemas/chargePointRequestModel'
                     
      responses:
        # for each value in the Result class an error code has been created. For eg: 201 is for Result value - 'ok', 206 for Result value 'partly', 401 for a Result value 'not-authorised' etc, 400 for a Result value 'inavlid-id' and 'format',500 for a Result value 'server' , 403 for a Result value 'roaming'
        
          '201':
            # This response is sent by the CHS when the CPO could successfully set all the Charge Point Information Records in the Clearing House. With a successful operation by CPO, the CHS sents the Result value 'ok'
              description: The response from CHS. Successfully uploaded the Charge Point Information Records by the CPO into the CHS (SetChargePointList.conf).
              content:
                application/json:
                  schema:
                    type: object
                    required:
                      - result
                    properties:
                      result:
                        # the resultCodeType 'ok' is to be send.
                        $ref: 'schemas/result.yaml#/Result'
            
          '206':
            # This response is sent by the CHS when the CPO  uploads the Charge Point Information Records in the CHS, however not all were  successfully uploaded due to some reason. The CHS sends the Result value 'partly' and also sends the Charge Point Information Records that could not be uploaded in the CHS.
              description: Partially-successful upload of Charge Point Information Records by CPO into the CHS (SetChargePointList.conf).
              content:
                application/json:
                  schema:
                    #type: array
                    #items:
                      # the resultCodeType 'partly' is to be send.
                           $ref: '#/components/schemas/refusedChargePointInfoResponse'
                  
          '401':
            # The response send by the CHS when the CPO is Not-authorised to upload/update data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
          
                         $ref: '#/components/responses/Not-authorised'
                         
          '400':
           # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
            
            
                         $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent
              
                         $ref: '#/components/responses/InternalServerError'
                         
          '403':
            # The response send by the CHS when the CPO requesting the update on roaming list  is one which has no roaming connections set or have no own partners connected to the user. Result value 'roaming'
                
                        $ref: '#/components/responses/Forbidden'   
                        
    patch:
    # For user information and routing purpose detailed information about charge points can be exchanged via OCHP. The CPO sends this data towards the systems of Navigation Service Providers. Those systems may aggregate, sort and filter the data and provide it to the navigation services or devices through proprietary interfaces within the NSP ecosystem. 
      tags:
        -  'CPO: Charge Point Information Exchange API'
      description: The CPO makes an update on the existing list of Charge Point information records.
      requestBody:
          required: true
          content: 
            application/json:
                schema:

                    $ref: '#/components/schemas/chargePointRequestModel'
                    
      responses:
          '201':
            # This response is sent by the CHS when the CPO could successfully carry out the update of the CHarge POint information records. With the successful update operation by CPO, the CHS sents the Result value 'ok'
              description: The response from CHS. Successful update of charge point information records by the CPO into the CHS (UpdateChargePointList.conf).
              content:
                application/json:
                  schema:
                    type: object
                    required:
                      - result
                    properties:
                      result:
                      # the resultCodeType 'ok' is to be send.
                        $ref: 'schemas/result.yaml#/Result'
            
          '206':
            # This response is sent by the CHS when the CPO carries out updates on the Charge Point records in the CHS, however not all were  successful due to some reason. The CHS sends the Result value 'partly' and also sends the Charge Point Records that could not be updated in the CHS.
              description: Partially-successful update of Charge Point Information records by the CPO into the CHS (UpdateChargePointList.conf).
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      # the resultCodeType 'partly' is to be send.
                           $ref: '#/components/schemas/refusedChargePointInfoResponse'
             
          
          '401':
            # The response send by the CHS when the CPO is Not-authorised to update data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
          
                         $ref: '#/components/responses/Not-authorised'
                         
          '400':
            # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
            
                         $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent
              
                         $ref: '#/components/responses/InternalServerError'
                         
          '403':
            # The response send by the CHS when the CPO requesting the  update on charge point information records is one which has no roaming connections set or have no own partners connected to the user. Result value 'roaming'
                
                        $ref: '#/components/responses/Forbidden' 
      
    get: 
      # An NSP downloads the global charge point information from the eCHS.
      tags: 
        - 'NSP: Charge Point Information Exchange API'
      description: Allows an NSP to download the charge Point Information from eCHS. (GetChargePointList.req)
      parameters: 
        
            - name: pagination
              in: query
              description: Filter the results updated, starting from the mentioned date and time.
              schema: 
              # to filter the Charge point data as per mentioned criteria.
                $ref: '#/components/schemas/Pagination'
                
            - name: CPO-ID
              in: query
              description: tThe ID of the CPO/CPOs whose ChargePoint information is requested by the NSP. To get ChargePoints from selected partner(s) i.e. CPOs
              schema: 
              # to get chargepoint information for/from selected partner(s) i.e. the user can include the The ID of the EMSP/EMSPs requesting the charge point data from the eCHS server or the ID of the CPO/CPOs whose charge point data is requested by the EMSP/EMSPs from the eCHS server. CPO/CPOs and for which specific sister companies i.e. EMSPs (if exist).
                $ref: '#/components/schemas/PartnerID'
                
      responses:
        
        # for each value in the Result class an error code has been created. For eg: 200 is for Result value - 'ok' , 401 for a Result value 'not-authorised' etc, 400 for a Result value 'inavlid-id' and 'format', 500 for a Result value 'server' , 403 for a Result value 'roaming'
        
          '200':
            description: The response from CHS. Successful download of the Roaming Authorisation Lists (GetChargePointList.conf).
            # This response is sent when the CHS was able to completely fulfill the get charge point list information  request from the NSP. If the CHS manages to send all the requested charge point information, then along with the list the result value 'ok' is sent.
            content:
              application/json:
                schema:
                  # the resultCodeType 'ok' is to be send.
                       $ref: '#/components/schemas/chargePointResponseModel'
                       
          '401':
            #  The response send by the CHS when the NSP is  Not-authorised to request for the data. It may be due to a Wrong username and/password. Result value 'not-authorised' is sent
           
              $ref: '#/components/responses/Not-authorised'
                    
                        
          '400':
            # The response send by the CHS when the Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user. Result value 'invalid-id' and/ 'format' is sent
          
             $ref: '#/components/responses/BadRequest'
              
          '500':
            # The response send by the CHS when there are internal server issues. Result value 'server' is sent.
          
              $ref: '#/components/responses/InternalServerError'
                        
          '403':
            # The response send by the CHS when the requesting NSP is one which has no roaming connections set or have no own partners connected to the user.
          
              $ref: '#/components/responses/Forbidden'
        
components:

 # securitySchemes:
  #  ApiKeyAuth:    
  #    type: http
   #   scheme: basic


  responses:
  
    BadRequest:
      description: Bad Request. Data/request has technical errors or One or more ID (EVSE/Contract) were not valid for this user.
      content:
          application/json:
              schema:
                # depending on the error the resultCodeType 'invalid-id' and/ 'format' should be used
                $ref: 'schemas/result.yaml#/Result'
      
  
    Not-authorised:
      description: Not-authorised to set the data. Wrong username and/password.
      content:
          application/json:
            schema:
               # the resultCodeType 'not-authorised' should be used
              $ref: 'schemas/result.yaml#/Result'
                    
    InternalServerError:
      description: Internal server error
      content:
        application/json:
            schema:
                # the resultCodeType 'server' should be used
              $ref: 'schemas/result.yaml#/Result'
                   
    Forbidden:
      description: Forbidden. No roaming connections set; No own partners connected to this user; Roaming partners have no data.
      content:
          application/json:
              schema:
                   # the resultCodeType 'roaming' should be used
                $ref: 'schemas/result.yaml#/Result'
      
  schemas:
    
    Pagination:
      type: object
      description: Allows the users to provide criteria in supported requests to filter the results.
      required: 
        - dateFrom
        - dateTo
        - offset
        - limit
      properties:
        dateFrom: 
          #Filter the results updated, starting from the mentioned date and time.
          $ref: 'schemas/generic.yaml#/DateTimeType'
        
        dateTo:
          # filter the results updated, till the mentioned date and time (inclusive).
          $ref: 'schemas/generic.yaml#/DateTimeType'
          
        offset:
          type: integer
          description: The offset of a first object, that the request will return. Default is always zero.
          default: 0
          example: 150
                
        limit:
          type: integer
          description: The maximum number of objects that a Get request will return.
          example: 50
          
    PartnerID:
      type: object
      description: to get data for/from selected partner(s) 
      properties:
        partnerID:
          type: array
          items:
                  type: string
                  minLength: 5
                  maxLength: 5
                  pattern: '^[A-Z]{2}[A-Za-z0-9]{3}$'
                  example: DELND

    ResponseModel:
      type: object
      description: The response send by CHS.
      required:
        - result
        - roamingAuthorisationItemInfo
        - roamingAuthorisationInfoArray
      properties:
        result:
          $ref: 'schemas/result.yaml#/Result'
                
        roamingAuthorisationItemInfo:
                $ref: '#/components/schemas/ItemInfo'
          
        roamingAuthorisationInfoArray:
          type: array
          items:
            $ref: 'schemas/authorisation.yaml#/AuthorisationInfo'
          
    RequestModel:
      type: object
      description: The request send by EMSP for posting Roaming Authorisation Lists.
      required:
        - roamingAuthorisationInfoArray
      properties:
          roamingAuthorisationInfoArray:
          #  type: array
          #  items:
            $ref: 'schemas/authorisation.yaml#/AuthorisationInfo'
              
    SingleRoamingResponseModel:
      type: object
      description: The response send by CHS.
      required:
        - result
        - roamingAuthorisationInfo
      properties:
        result:
          $ref: 'schemas/result.yaml#/Result'
          
        roamingAuthorisationInfo:
        
                $ref: 'schemas/authorisation.yaml#/AuthorisationInfo'
          
    PartialSuccessResponseModel:
      type: object
      description: The response send by CHS to the EMSP after setting/updating Roaming Authorisation Lists. This response is sent when not all but only part of the lists were only uploaded. The CHS also sends these refused Roaming Authorisation Lists along with the response.
      required: 
        - result
        - refusedRoamingAuthorisationInfo
      properties:
        result:
          # the Result would be partly in this case.
          $ref: 'schemas/result.yaml#/Result'
          
        refusedRoamingAuthorisationInfo:
          # Contains the roaming authorisation records that could not be set in CHS.
          type: array
          items:
            $ref: 'schemas/authorisation.yaml#/AuthorisationInfo'
          
    AddCdrRequestModel:
      type: object
      description: The CDR Info that is send by the CPO to the CHS with the POST CDRs request. 
      required:
        - cdrInfoArray
      properties:
        cdrInfoArray:
              # Contains all information concerning one or more  Charge Detail Records
              # When CDRs are posted for the first time in CHS, the cdrStatusType should be 'new'
              # When the CPO re-uploads the CDR after it was accepted/decined in the previous upload, the status 'revised' should be used.
              # CPO should also be able to add the declined CDRs finally with status 'rejected'.
              type: array
              items:
                $ref: 'schemas/cdr.yaml#/CDRInfo'


    ImplausibleCDRsResponseModel:
      type: object
      description: The response send by CHS to the CPO after uploading the Charge detail records. This response is sent when not all CDRs could be successfully added to the Clearing house system. The CHS also sends the list of Implausible/refused CDRs along with the response 'partly'.
      
      required: 
          - result
          - implausibleCdrsArray
        
      properties:
        result:
          # the Result would be partly in this case.
          $ref: 'schemas/result.yaml#/Result'
           
        implausibleCdrsArray:
           type: array
           items:
              $ref: 'schemas/cdr.yaml#/CdrId'
          
    ConfirmCDRs:
      type: object
      properties:
        approved:
          type: array
          items:
              $ref: '#/components/schemas/Approved'
        declined:
          type: array
          items:
            
              $ref: '#/components/schemas/Declined'
    
    refusedIDs:
      type: object
      description: This response is sent by the CHS when the EMSP tries to send the list of Approved and/declined CDRs, however not all were  successful due to some reason. The CHS sends the Result value 'partly' and also sends the cdr Ids, whose status could not be uploaded in the CHS.
      required: 
        - result
        - refusedcdrIds
      properties:
        result:
          # the Result would be partly in this case.
          $ref: 'schemas/result.yaml#/Result'
          
        refusedcdrIds:
          # Contains the list of IDs that could not be set in CHS.
          type: array
          items:
            $ref: 'schemas/cdr.yaml#/CdrId'
    
    ItemInfo:
      type: object
      description: This contains the roaming authorisation item info.
      required:
        - objectCount
        - objectSize
        - limit
      properties:
        objectCount:
          type: integer
          description: Total number of objects available in the server system.
          example: 569
          
        objectSize:
          type: integer
          description: Object size receive from the server response
          example: 20kB
          
        limit:
          type: integer
          description: Number of objects that are returned.
          example: 100
          
    TariffRequestModel:
      type: object
      description: This contains the tariff information to be updated or added.
      required: 
        - tariffInfoArray
      properties:
        tariffInfoArray:
          type: array
          items:
                $ref: 'schemas/tariff.yaml#/TariffInfo'
    
    TariffResponseModel:            
        type: object
        description: The response send by CHS to the EMSP for get tariff information request. The CHS sends the tariff information records along with the response 'ok'.
        required: 
            - result
            - TariffInfoArray
        properties:
            result:
              # the Result would be Ok in this case.
              $ref: 'schemas/result.yaml#/Result'
                  
            TariffInfoArray:
              # Contains the tariff information that is currently valid or that was changed since the time specified in lastUpdate in the request.
              type: array
              items:
                  $ref: 'schemas/tariff.yaml#/TariffInfo'
                
    refusedTariffInfoModel:
      type: object
      description: The response send by CHS to the CPO after uploading/updating the tariff information. This response is sent when not all but only part of the information could only be uploaded/updated. The CHS also sends these refused tariff information records along with the response 'partly'.
      required: 
        - result
        - refusedTariffInfo
      properties:
        result:
          # the Result would be partly in this case.
          $ref: 'schemas/result.yaml#/Result'
              
        refusedTariffInfo:
          # Contains the tariff information records that could not be set in CHS.
          type: array
          items:
              $ref: 'schemas/tariff.yaml#/TariffInfo'

    Approved:
        type: object
        description: Contains the CdrId and EvseId for CDRs that have been approved by the EMSP.
        properties:
          cdrId:
            $ref: 'schemas/cdr.yaml#/CdrId'
          EvseId:
            $ref: 'schemas/generic.yaml#/EvseId'
            
    Declined:
        type: object
        description: Contains the CdrId and EvseId for CDRs that have been declined by the EMSP.
        properties:
          cdrId:
            $ref: 'schemas/cdr.yaml#/CdrId'
          EvseId:
            $ref: 'schemas/generic.yaml#/EvseId'
    


    CDRsConfirmation:
      type: object
      description: The response send by CHS.
      required:
        - result
        - cdrsItemInfo
        - cdrInfoArray
      properties:
        result:
          $ref: 'schemas/result.yaml#/Result'
              
        cdrsItemInfo:
              $ref: '#/components/schemas/ItemInfo'
          
        cdrInfoArray:
            type: array
            items:
              $ref: 'schemas/cdr.yaml#/CDRInfo'
              
    CDRCheck:
      type: object
      description: The response send by CHS.
      required:
        - result
        - cdrInfoArray
      properties:
        result:
          $ref: 'schemas/result.yaml#/Result'
              
        cdrInfoArray:
            type: array
            items:
              $ref: 'schemas/cdr.yaml#/CDRInfo'
          

      
    UpdateStatus:
    # Used for the purpose of the exchange of live status information in addition to the charge point information or POI data from an EVSE Operator to an NSP.
      type: object
      description: Update the live status of individual charging stations/individual parking spots in the eCHS.
      properties:
        evse:
          # This contains one EVSE id with the current status represented in a major part and a minor part.
          type: array
          items:

            $ref: 'schemas/evseStatus.yaml#/EvseStatusType'
          
        parkingspot:
          # This contains one parking spot ID with the current status.
          type: array
          items:

            $ref: 'schemas/evseStatus.yaml#/ParkingStatusType'
          
        ttl:
         # The time to live is set as the deadline till the status values are to be considered valid, where not otherwise specified.
             $ref: 'schemas/generic.yaml#/DateTimeType'
          

    
    StatusConfirmation:
        type: object
        description: eCHS response to the Get Status request from NSP.
        properties:
        
          evse:
            type: array
            description: This contains one EVSE ID with the current status represented in a major part and a minor part.Status values for all EVSE as sent to the eCHS by the EVSE operator.
            items:
              $ref: 'schemas/evseStatus.yaml#/EvseStatusType'
              
          parking:
            type: array
            description: This contains one parking spot ID with the current status. Status values for all parking spots as sent to the eCHS by the parking spot operator.
            items:
              $ref: 'schemas/evseStatus.yaml#/ParkingStatusType'
          
          combined:
            type: array
            description: This contains one EVSE ID status including the parking spot status (if applicable). Status values for all EVSE that have been combined with parking status values according to static POI data.
            items:

              $ref: 'schemas/evseStatus.yaml#/EvseStatusType'


    chargePointRequestModel:
        type: object
        description: The request send by CPO to upload Charge Point Information records.
        required:
          - chargePointInfoArray
        properties:
            chargePointInfoArray:
              type: array
              items:
                $ref: 'schemas/chargePoint.yaml#/ChargePointInfo'
    
    refusedChargePointInfoResponse:
        type: object
        description: The response send by CHS to the CPO after uploading the Charge Point Information Records. This response is sent when not all but only part of the records were only uploaded. The CHS also sends these refused charge point information records along with the response, 'partly'
        required: 
          - result
          - refusedChargePointInfo
        properties:
          result:
            # the Result would be partly in this case.
            $ref: 'schemas/result.yaml#/Result'
            
          refusedChargePointInfo:
            # Contains the charge point information records that could not be set in CHS.
            type: array
            items:
              $ref: 'schemas/chargePoint.yaml#/ChargePointInfo'
    
    chargePointResponseModel:
       type: object
       description: The response send by the eCHS.
       required:
          - result
          - chargePointItemInfo
          - chargePointInfoArray
       properties:
          result:
            # the Result would be Ok in this case.
            $ref: 'schemas/result.yaml#/Result'
             
          chargePointItemInfo:
            $ref: '#/components/schemas/ItemInfo'
            
          chargePointInfoArray:
            # Contains the charge point information records 
            type: array
            items:
                $ref: 'schemas/chargePoint.yaml#/ChargePointInfo'
        

        

          


    

